<#import "common.ftl" as t />
<@t.AutoGeneratedWarning />
package com.linkedin.dagli.tuple;

/**
 * A tuple of arity ${arity}.
 *
 * FieldTuples are more memory-efficient than ArrayTuples because they do not need to store an extra object (the array),
 * but ArrayTuples are faster to create if the tuple elements are already extant within an array.
 */
final class <@t.FieldTuple arity /> extends AbstractTuple implements <@t.Tuple arity /> {
  private static final long serialVersionUID = 1;

  <#list 0..<arity as index>
  private final ${t.typeParameters[index]} _element${index};
  </#list>

  /**
   * Creates a new tuple from the given fields.
   */
  public FieldTuple${arity}(<#list 0..<arity as index>${t.typeParameters[index]} element${index}<#sep>, </#list>) {
    <#list 0..<arity as index>
    _element${index} = element${index};
    </#list>
  }

  <#list 0..<arity as index>
  @Override
  public ${t.typeParameters[index]} get${index}() {
    return _element${index};
  }
  </#list>

  @Override
  public Object get(int index) {
    switch (index) {
      <#list 0..<arity as index>
      case ${index}:
        return _element${index};
      </#list>
      default:
        throw new IndexOutOfBoundsException();
    }
  }

  @Override
  public int size() {
    return ${arity};
  }
}
