// AUTOGENERATED CODE.  DO NOT MODIFY DIRECTLY!  Instead, please modify the transformer/TupledX.ftl file.
// See the README in the module's src/template directory for details.
package com.linkedin.dagli.transformer;

import com.linkedin.dagli.annotation.equality.ValueEquality;
import com.linkedin.dagli.producer.Producer;
import com.linkedin.dagli.tuple.Tuple4;


/**
 * A transformer that produces a tuple of the values it receives as inputs.
 */
@ValueEquality
public class Tupled4<A, B, C, D> extends
    AbstractPreparedTransformer4<A, B, C, D, Tuple4<A, B, C, D>, Tupled4<A, B, C, D>> {
  private static final long serialVersionUID = 1;

  /**
   * Creates a new instance with the specified inputs.
   */
  public Tupled4(Producer<? extends A> input1, Producer<? extends B> input2, Producer<? extends C> input3,
      Producer<? extends D> input4) {
    super(input1, input2, input3, input4);
  }

  @Override
  public Tuple4<A, B, C, D> apply(A value1, B value2, C value3, D value4) {
    return Tuple4.of(value1, value2, value3, value4);
  }
}
