// AUTOGENERATED CODE.  DO NOT MODIFY DIRECTLY!  Instead, please modify the transformer/ValueXFromTuple.ftl file.
// See the README in the module's src/template directory for details.
package com.linkedin.dagli.transformer;

import java.util.Collection;
import java.util.Collections;
import java.util.List;
import com.linkedin.dagli.annotation.equality.ValueEquality;
import com.linkedin.dagli.producer.Producer;
import com.linkedin.dagli.reducer.InverseClassReducer;
import com.linkedin.dagli.reducer.Reducer;
import com.linkedin.dagli.tuple.TupleValue5;


/**
 * Transformer that extracts the sixth element from a tuple.
 */
@ValueEquality
public class Value5FromTuple<F> extends
    AbstractPreparedTransformer1WithInput<TupleValue5<? extends F>, F, Value5FromTuple<F>> {
  private static final long serialVersionUID = 1;
  private static final List<InverseClassReducer> REDUCERS = Collections.singletonList(new InverseClassReducer(5,
      Tupled6.class, Tupled7.class, Tupled8.class, Tupled9.class, Tupled10.class));

  /**
   * Creates a new instance that will extract elements from the provided input tuple.
   *
   * @param input the producer providing tuples whose sixth element will be extracted
   */
  public Value5FromTuple(Producer<? extends TupleValue5<? extends F>> input) {
    super(input);
  }

  @Override
  protected Collection<? extends Reducer<? super Value5FromTuple<F>>> getGraphReducers() {
    return REDUCERS;
  }

  @Override
  public F apply(TupleValue5<? extends F> value) {
    return value.get5();
  }
}
