// AUTOGENERATED CODE.  DO NOT MODIFY DIRECTLY!  Instead, please modify the transformer/internal/TransformerXInternalAPI.ftl file.
// See the README in the module's src/template directory for details.
package com.linkedin.dagli.transformer.internal;

import com.linkedin.dagli.transformer.Transformer2;
import com.linkedin.dagli.producer.Producer;
import com.linkedin.dagli.transformer.Transformer1;
import com.linkedin.dagli.tuple.Tuple2;
import com.linkedin.dagli.transformer.Transformer3;
import java.util.List;


public interface Transformer2InternalAPI<A, B, R, S extends Transformer2<A, B, R>> extends TransformerInternalAPI<R, S> {

  @Override
  @SuppressWarnings("unchecked")
  default S withInputsUnsafe(List<? extends Producer<?>> newInputs) {
    return withInputs((Producer<? extends A>) newInputs.get(0), (Producer<? extends B>) newInputs.get(1));
  }

  Producer<? extends A> getInput1();

  Producer<? extends B> getInput2();

  S withInputs(Producer<? extends A> input1, Producer<? extends B> input2);

  <C> Transformer3<A, B, C, R> withArity3(Producer<? extends C> newInput3);

  <N> Transformer3<N, A, B, R> withPrependedArity3(Producer<? extends N> newInput1);

  Transformer1<Tuple2<? extends A, ? extends B>, R> withArity1(
      Producer<? extends Tuple2<? extends A, ? extends B>> inputTuple);
}
