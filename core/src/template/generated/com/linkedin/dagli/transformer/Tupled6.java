// AUTOGENERATED CODE.  DO NOT MODIFY DIRECTLY!  Instead, please modify the transformer/TupledX.ftl file.
// See the README in the module's src/template directory for details.
package com.linkedin.dagli.transformer;

import com.linkedin.dagli.annotation.equality.ValueEquality;
import com.linkedin.dagli.producer.Producer;
import com.linkedin.dagli.tuple.Tuple6;


/**
 * A transformer that produces a tuple of the values it receives as inputs.
 */
@ValueEquality
public class Tupled6<A, B, C, D, E, F> extends
    AbstractPreparedTransformer6<A, B, C, D, E, F, Tuple6<A, B, C, D, E, F>, Tupled6<A, B, C, D, E, F>> {
  private static final long serialVersionUID = 1;

  /**
   * Creates a new instance with the specified inputs.
   */
  public Tupled6(Producer<? extends A> input1, Producer<? extends B> input2, Producer<? extends C> input3,
      Producer<? extends D> input4, Producer<? extends E> input5, Producer<? extends F> input6) {
    super(input1, input2, input3, input4, input5, input6);
  }

  @Override
  public Tuple6<A, B, C, D, E, F> apply(A value1, B value2, C value3, D value4, E value5, F value6) {
    return Tuple6.of(value1, value2, value3, value4, value5, value6);
  }
}
