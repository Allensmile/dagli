<#import "../common.ftl" as c />
<@c.AutoGeneratedWarning />
package com.linkedin.dagli.preparer;

import com.linkedin.dagli.transformer.PreparedTransformer${arity};

<#assign preparedType>N extends <@c.PreparedTransformer arity /></#assign>
<#assign thisType>AbstractBatchPreparer${arity}<<@c.InputGenericArguments arity />, R, N></#assign>

/**
 * A common abstract base class that {@link Preparer}s prepared using {@link PreparerMode#BATCH} mode are highly
 * encouraged to extend.  Besides simplifying the code and improving readability, this also helps insulate the derived
 * class's implementation from future changes in the Dagli Framework.
 *
 <@c.GenericInputTypesJavadoc arity />
 * @param <R> result type of the transformer prepared by this preparer
 * @param <N> the type of {@link com.linkedin.dagli.transformer.PreparedTransformer} prepared by this preparer
 */
public abstract class AbstractBatchPreparer${arity}<<@c.InputGenericArguments arity />, R, ${preparedType}>
  extends <@c.AbstractPreparer arity /> {

  @Override
  public final PreparerMode getMode() {
    return PreparerMode.BATCH;
  }
}